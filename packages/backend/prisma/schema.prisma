generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  telegramId  Int      @unique
  firstName   String
  lastName    String?
  username    String?
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orders    Order[]
  favorites Favorite[]
  addresses Address[]

  @@map("users")
}

model Product {
  id            String   @id @default(cuid())
  name          String
  description   String
  price         Int
  originalPrice Int?
  brand         String
  images        String[]
  inStock       Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  
  orderItems OrderItem[]
  favorites  Favorite[]

  @@map("products")
}

model Category {
  id       String    @id @default(cuid())
  name     String
  slug     String    @unique
  icon     String?
  products Product[]

  @@map("categories")
}

model Order {
  id        String      @id @default(cuid())
  status    OrderStatus @default(PENDING)
  total     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  items OrderItem[]

  @@map("orders")
}

model OrderItem {
  id       String @id @default(cuid())
  quantity Int
  price    Int

  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

model Favorite {
  id String @id @default(cuid())

  userId    String
  user      User    @relation(fields: [userId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
  @@map("favorites")
}

model Address {
  id          String  @id @default(cuid())
  label       String
  address     String
  latitude    Float
  longitude   Float
  isDefault   Boolean @default(false)
  
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@map("addresses")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  COURIER_ASSIGNED
  PICKED_UP
  IN_TRANSIT
  DELIVERED
  CANCELLED
} 